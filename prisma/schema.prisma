generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Comment {
  comment_id BigInt   @id
  content    String   @db.Text
  created_at DateTime @db.Timestamp(0)
  updated_at DateTime @db.Timestamp(0)
  user_id    BigInt
  report_id  BigInt
  User       User     @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_User_TO_Comment_1")

  @@index([report_id], map: "FK_Report_TO_Comment_1")
  @@index([user_id], map: "FK_User_TO_Comment_1")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model User {
  user_id    BigInt    @id
  name       String    @db.VarChar(30)
  email      String    @db.VarChar(100)
  password   String    @db.VarChar(50)
  role       User_role @default(USER)
  created_at DateTime  @db.Timestamp(0)
  updated_at DateTime  @db.Timestamp(0)
  Comment    Comment[]
  report     report[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model report {
  report_id         BigInt   @id
  report_start_date DateTime @db.Timestamp(0)
  title             String   @db.VarChar(100)
  content           String?  @db.Text
  created_at        DateTime @db.Timestamp(0)
  updated_at        DateTime @db.Timestamp(0)
  user_id           BigInt
  report_end_date   DateTime @db.Timestamp(0)
  User              User     @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_User_TO_Report_1")

  @@index([user_id], map: "FK_User_TO_Report_1")
}

enum User_role {
  USER
  ADMIN
}
