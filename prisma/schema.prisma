generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model User {
  user_id    BigInt    @id @default(autoincrement())
  name       String    @db.VarChar(30)
  email      String    @unique(map: "uniq_user_email") @db.VarChar(100)
  password   String    @db.VarChar(72)
  role       User_role @default(USER)
  created_at DateTime  @default(now()) @db.Timestamp(0)
  updated_at DateTime  @default(now()) @updatedAt @db.Timestamp(0)
  comment    comment[]
  report     report[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model comment {
  comment_id BigInt   @id @default(autoincrement())
  content    String   @db.Text
  created_at DateTime @default(now()) @db.Timestamp(0)
  updated_at DateTime @default(now()) @db.Timestamp(0)
  user_id    BigInt
  report_id  BigInt
  report     report   @relation(fields: [report_id], references: [report_id], onDelete: Cascade, map: "FK_Report_TO_Comment_1")
  User       User     @relation(fields: [user_id], references: [user_id], onDelete: Cascade, map: "FK_User_TO_Comment_1")

  @@index([report_id], map: "FK_Report_TO_Comment_1")
  @@index([user_id], map: "FK_User_TO_Comment_1")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model report {
  report_id         BigInt    @id @default(autoincrement())
  report_start_date DateTime  @db.Timestamp(0)
  title             String    @db.VarChar(100)
  content           String?   @db.Text
  created_at        DateTime  @default(now()) @db.Timestamp(0)
  updated_at        DateTime  @default(now()) @db.Timestamp(0)
  user_id           BigInt
  report_end_date   DateTime  @db.Timestamp(0)
  comment           comment[]
  User              User      @relation(fields: [user_id], references: [user_id], map: "FK_User_TO_Report_1")

  @@index([user_id], map: "FK_User_TO_Report_1")
}

enum User_role {
  USER
  ADMIN
}
